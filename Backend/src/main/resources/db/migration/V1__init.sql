-- Users table (must be first due to foreign key dependencies)
create table users (
    id bigint generated by default as identity,
    username varchar(50) not null,
    email varchar(100) not null,
    password varchar(255) not null,
    role varchar(255) check (role in ('ROLE_USER','ROLE_ADMIN')),
    primary key (id),
    constraint unique_email unique (email)
);

create index idx_user_email on users (email);
create index idx_user_id on users (id);

-- Chats table
create table chats (
    id bigint generated by default as identity,
    primary key (id)
);

create index idx_chat on chats (id);

-- Watchlist table
create table watchlist (
    user_id bigint not null,
    primary key (user_id),
    constraint fk_watchlist_user foreign key (user_id) references users
);

create index idx_watchlist_user_id on watchlist (user_id);

-- Watchlist movies
create table watchlist_movies (
    watchlist_id bigint not null,
    movie_id bigint,
    constraint fk_watchlist_movies foreign key (watchlist_id) references watchlist
);

-- Watchlist series
create table watchlist_series (
    watchlist_id bigint not null,
    series_id bigint,
    constraint fk_watchlist_series foreign key (watchlist_id) references watchlist
);

-- Friends table
create table friends (
    user1_id bigint not null,
    user2_id bigint not null,
    created_at timestamp(6) not null,
    status varchar(255) not null check (status in ('PENDING','ACCEPTED','BLOCKED')),
    primary key (user1_id, user2_id),
    constraint fk_friends_user1 foreign key (user1_id) references users,
    constraint fk_friends_user2 foreign key (user2_id) references users
);

create index idx_friend_user_status on friends (user1_id, status);
create index idx_friend_friend_status on friends (user2_id, status);
create index idx_friend_user_created_at on friends (user1_id, created_at desc);

-- Chat participants
create table chat_participants (
    chat_id bigint not null,
    user_id bigint not null,
    primary key (chat_id, user_id),
    constraint fk_chat_participants_chat foreign key (chat_id) references chats,
    constraint fk_chat_participants_user foreign key (user_id) references users
);

-- Messages table
create table messages (
    id bigint generated by default as identity,
    chat_id bigint not null,
    sender_id bigint not null,
    content varchar(255) not null,
    is_read boolean not null,
    created_at timestamp(6) not null,
    primary key (id),
    constraint fk_messages_chat foreign key (chat_id) references chats,
    constraint fk_messages_sender foreign key (sender_id) references users
);

create index idx_chat_id on messages (chat_id, created_at desc);

-- Notifications table
create table notifications (
    id bigint generated by default as identity,
    user_id bigint not null,
    type varchar(255) not null,
    related_id bigint not null,
    message varchar(255) not null,
    is_read boolean not null,
    created_at timestamp(6) not null,
    primary key (id),
    constraint fk_notifications_user foreign key (user_id) references users(id)
);

create index idx_notification_user_id on notifications (user_id, created_at desc);